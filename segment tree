//minmaxsegmenttree
class sgtree{
public:
vector<ll> seg;

sgtree(ll n){

    seg.resize(4*n+1);
}
void segmenttree(ll ind,ll low,ll high,vector<ll>&v){

  if(low==high){
    seg[ind]=v[low];
    return;
  }

      ll mid=(low+high)/2;
        segmenttree(2*ind+1,low,mid,v);
        segmenttree(2*ind+2,mid+1,high,v);
        
          seg[ind]=min(seg[2*ind+1],seg[2*ind+2]);
    
}

ll  segmentquery(ll ind,ll low, ll high,ll l ,ll r){
   
   if(l>high || r<low){
    return INT_MAX;
   }
   
   if(low>=l && high<=r){
    return seg[ind];
   }
   ll mid=(low+high)/2;
   ll left=segmentquery(2*ind+1,low,mid,l,r);
   ll right=segmentquery(2*ind+2,mid+1,high,l,r);

   return min(left,right);

}
void segmentupdate(ll ind,ll low,ll high,ll i,ll val){
    if(low==high){
        seg[ind]=val;
        return;
    }
    ll mid=(low+high)/2;
    if(i<=mid)segmentupdate(2*ind+1,low,mid,i,val);
    else segmentupdate(2*ind+2,mid+1,high,i,val);

    seg[ind]=min(seg[2*ind+1],seg[2*ind+2]);
    
}
};
